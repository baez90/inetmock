image: registry.gitlab.com/inetmock/ci-image/go

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

stages:
  - test
  - build
  - release
  - deploy

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_TLS_VERIFY: 1
  DOCKER_HOST: 'tcp://docker:2376'
  SAST_EXCLUDED_ANALYZERS: "eslint"


test:
  stage: test
  needs: []
  script:
    - task cli-cover-report
  artifacts:
    reports:
      junit: out/report.xml
      cobertura: out/coverage.xml

integration-test:
  stage: test
  services:
    - docker:dind
  needs: []
  script:
    - task integration-test

lint:
  stage: test
  script:
    - task lint

snapshot-release:
  stage: build
  services:
    - docker:dind
  needs:
    - test
    - integration-test
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - task snapshot-release
  except:
    - tags

release:
  stage: release
  services:
    - docker:dind
  needs:
    - test
    - integration-test
  only:
    - tags
  variables:
    GIT_DEPTH: 0
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - goreleaser release --rm-dist

pages:
  stage: deploy
  image: registry.gitlab.com/inetmock/ci-image/mdbook
  needs: []
  only:
    refs:
      - master
      - tags
  script:
    - mdbook build -d ./../public ./docs
  artifacts:
    paths:
      - public
