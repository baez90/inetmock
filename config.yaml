x-response-rules: &httpResponseRules
  rules:
    - PathPattern("") => File("sample.exe")
    - Header("Accept", "application/octet-stream") => File("sample.exe")
    - Header("Accept", "image/jpeg") => File("default.jpg")
    - PathPattern(".*\\.(?i)(jpg|jpeg)") => File("default.jpg")
    - Header("Accept", "image/png") => File("default.png")
    - PathPattern(".*\\.(?i)png") => File("default.png")
    - Header("Accept", "image/gif") => File("default.gif")
    - PathPattern(".*\\.(?i)gif") => File("default.gif")
    - Header("Accept", "image/x-icon") => File("default.ico")
    - PathPattern(".*\\.(?i)ico") => File("default.ico")
    - Header("Accept", "text/plain") => File("default.txt")
    - PathPattern(".*\\.(?i)txt") => File("default.txt")
    - Header("Accept", "text/html") => File("default.html")
    - PathPattern(".*") => File("default.html")

x-http-handlers: &httpHandlers
  endpoints:
    plainHttp:
      handler: http_mock
      tls: false
      options:
        <<: *httpResponseRules
    https:
      handler: http_mock
      tls: true
      options:
        <<: *httpResponseRules

data:
  pcap: /var/lib/inetmock/data/pcap
  audit: /var/lib/inetmock/data/audit
  fakeFiles: ./assets/fakeFiles

api:
  listen: unix:///var/run/inetmock.sock

tls:
  curve: P256
  minTLSVersion: TLS10
  includeInsecureCipherSuites: false
  validity:
    ca:
      notBeforeRelative: 17520h
      notAfterRelative: 17520h
    server:
      NotBeforeRelative: 168h
      NotAfterRelative: 168h
  rootCaCert:
    publicKeyPath: ./assets/demoCA/ca.pem
    privateKeyPath: ./assets/demoCA/ca.key
  certCachePath: /tmp/inetmock/

listeners:
  udp_53:
    name: ''
    protocol: udp
    listenAddress: ''
    port: 1053
    endpoints:
      plainDns:
        handler: dns_mock
        options:
          rules:
            - pattern: ".*\\.google\\.com"
              response: 1.1.1.1
            - pattern: ".*\\.reddit\\.com"
              response: 2.2.2.2
          fallback:
            strategy: incremental
            args:
              startIP: 10.0.10.0
  tcp_80:
    name: ''
    protocol: tcp
    listenAddress: ''
    port: 80
    <<: *httpHandlers
  tcp_443:
    name: ''
    protocol: tcp
    listenAddress: ''
    port: 443
    <<: *httpHandlers
  tcp_853:
    name: ''
    protocol: tcp
    listenAddress: ''
    port: 853
    endpoints:
      DoT:
        handler: dns_mock
        tls: true
        options:
          rules:
            - pattern: ".*\\.google\\.com"
              response: 1.1.1.1
            - pattern: ".*\\.reddit\\.com"
              response: 2.2.2.2
          fallback:
            strategy: incremental
            args:
              startIP: 10.0.10.0
  tcp_3128:
    name: ''
    protocol: tcp
    listenAddress: ''
    port: 3128
    endpoints:
      proxyPlain:
        handler: http_proxy
        options:
          target:
            ipAddress: 127.0.0.1
            port: 80
      proxyTls:
        handler: http_proxy
        tls: true
        options:
          target:
            ipAddress: 127.0.0.1
            port: 443
  tcp_8080:
    name: ''
    protocol: tcp
    listenAddress: ''
    port: 8080
    <<: *httpHandlers
  tcp_8443:
    name: ''
    protocol: tcp
    listenAddress: ''
    port: 8443
    <<: *httpHandlers
  tcp_9110:
    name: ''
    protocol: tcp
    listenAddress: ''
    port: 9110
    endpoints:
      metrics:
        handler: metrics_exporter
        options:
          route: /metrics