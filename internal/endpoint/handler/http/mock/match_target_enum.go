// Code generated by go-enum
// DO NOT EDIT!

package mock

import (
	"fmt"
	"strings"
)

const (
	// RequestMatchTargetPath is a RequestMatchTarget of type Path.
	RequestMatchTargetPath RequestMatchTarget = iota
	// RequestMatchTargetHeader is a RequestMatchTarget of type Header.
	RequestMatchTargetHeader
)

const _RequestMatchTargetName = "PathHeader"

var _RequestMatchTargetNames = []string{
	_RequestMatchTargetName[0:4],
	_RequestMatchTargetName[4:10],
}

// RequestMatchTargetNames returns a list of possible string values of RequestMatchTarget.
func RequestMatchTargetNames() []string {
	tmp := make([]string, len(_RequestMatchTargetNames))
	copy(tmp, _RequestMatchTargetNames)
	return tmp
}

var _RequestMatchTargetMap = map[RequestMatchTarget]string{
	0: _RequestMatchTargetName[0:4],
	1: _RequestMatchTargetName[4:10],
}

// String implements the Stringer interface.
func (x RequestMatchTarget) String() string {
	if str, ok := _RequestMatchTargetMap[x]; ok {
		return str
	}
	return fmt.Sprintf("RequestMatchTarget(%d)", x)
}

var _RequestMatchTargetValue = map[string]RequestMatchTarget{
	_RequestMatchTargetName[0:4]:                   0,
	strings.ToLower(_RequestMatchTargetName[0:4]):  0,
	_RequestMatchTargetName[4:10]:                  1,
	strings.ToLower(_RequestMatchTargetName[4:10]): 1,
}

// ParseRequestMatchTarget attempts to convert a string to a RequestMatchTarget
func ParseRequestMatchTarget(name string) (RequestMatchTarget, error) {
	if x, ok := _RequestMatchTargetValue[name]; ok {
		return x, nil
	}
	return RequestMatchTarget(0), fmt.Errorf("%s is not a valid RequestMatchTarget, try [%s]", name, strings.Join(_RequestMatchTargetNames, ", "))
}

// MarshalText implements the text marshaller method
func (x RequestMatchTarget) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method
func (x *RequestMatchTarget) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseRequestMatchTarget(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
